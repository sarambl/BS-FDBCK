def ds2df_ukesm(ds_st, model_lev_i=-1,
                mask_summer = True, take_daily_median=True, summer_months=None):
    """
    change units and make dataframe for daily median (if take_daily_median=True)
    :param ds_st:
    :param model_lev_i:
    :param take_daily_median:
    :param summer_months:
    :return:
    """
    # N50, N100 etc:
    ds_st = change_units_and_compute_vars_ukesm(ds_st)

    #ds_st_ilev = ds_st.isel(lev=model_lev_i)
    # no lev difference yet.
    ds_st_ilev = ds_st
    if take_daily_median:
        df = calculate_daily_median_summer(ds_st_ilev, summer_months=summer_months)
        df_sm = calculate_summer_median(df)
    else:
        if mask_summer:
            _ds = mask4summer(ds_st_ilev, months=summer_months)
        else:
            _ds = ds_st_ilev
        _ds['is_JJA'] = _ds['time.month'].isin([6,7,8])
        _ds['is_JA'] = _ds['time.month'].isin([7,8])
        _ds['isSummer'] = _ds['time.month'].isin([7,8])
        df = _ds.to_dataframe()
        #df = df[df['isSummer'].notnull()]
        df_sm = None

    return df, df_sm

def change_units_and_compute_vars_ukesm(ds, pressure = pressure_default, temperature = temperature_default):
    """

    :param ds_st:
    :return:
    """

    air_density =  pressure/ (R * temperature)
    if 'sfmmroa' in ds:
        ds['OA'] = ds['sfmmroa']*air_density*kg2ug
        atts =ds['sfmmroa'].attrs.copy()
        atts['standard_name'] = 'density_of_particulate_organic_matter_dry_aerosol_particles_in_air_at_surface'
        atts['long_name'] = 'Total organic aerosol mass density surface layer (standard pressure and temperature'
        atts['comment'] = 'Converted to density at standard pressure and temperature '+atts['comment']

        ds['OA'].attrs = atts
    if 'tas' in ds:
        ds['T'] = ds['tas']
        ds['T_C'] = ds['tas'] - 273.15
        atts = ds['tas'].attrs.copy()
        atts['units'] = 'deg C'
        ds['T_C'].attrs = atts

    return ds
